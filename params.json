{"name":"Easy PACS","tagline":"The easiest way to store dicom files with a new open-source dicom listener for your PACS Server","body":"### Welcome to EasyPACS.\r\nEasy PACS allows you to setup a PACS Server with online dicom viewer. It uses [dcm4che](http://www.dcm4che.org/) API tools re-written with the latest frameworks such as Spring Boot and Gradle Build Environment. No need to setup a server anymore, the _**jar**_ file is the file you only need and it already contains the web-server within. Thanks to Spring Boot, it enables the jar file to become both the listener (server) and web at the same time. \r\n\r\n### Object Model\r\nThe server accepts all the dicom files and generates its entity data that is populated to relational database. The dicom entities are  _**Patient, Study, Series, Equipment and Instance**_.  They are reflected to your MYSQL database by the JPA Entity Manager. It converts the entities into re-usable object models. \r\n\r\n### Infrastructure\r\nEasy PACS uses several frameworks and platforms such as Spring Boot Framework, JPA/Hibernate, Thymeleaf and Gradle. The [source code](https://github.com/mehmetsen80/EasyPACS) will inspire other developers as well in terms of using a compact platform with less code and maximum efficiency. Remember that both server and web is contained by one single jar file that makes setup very easy.\r\n\r\n\r\n### Why EasyPACS?\r\nPlenty of PACS servers exist in the market, so you might ask why another open-source PACS server? The PACS has right now $3 billion market size and they assume it will grow over $4 billion in 2018 with different archive models such as VNA (Vendor Neutral Archive). The problem is that the vendors charge too much mostly based on number of images just for standalone PACS servers.\r\n\r\n### Solution\r\nThe health facilities need a cheaper PACS server along with the ability to customize the PACS according to their workflow logic. As experienced PACS developers, we have been working on several PACSs for years and all of them needed different  logic. Setting up a standalone PACS is usually not enough, especially not worth when it is very expensive. _**In short, we provide the cheapest and best customization of PACS solutions ever for the health organizations.**_ \r\n\r\n### Dicom Standards\r\nThe standards of dicoms are specified by [nema.org](http://www.nema.org/) an association for the need of medical standards. PACS is known Picture Archiving and Communication System and several PACSs run in the market which most of them look very similar. They all rely on the same dicom standards with different enterprise approaches. We are familiar with the standards of dicom files. So, we created the most robust and easiest dicom entity model for you.\r\n\r\n### Database is MYSQL\r\nWe use MYSQL database for its flexibility and ease of usage. Please run the below sql queries to generate your data tables.\r\n```\r\nCREATE TABLE tbl_patient (pkTBLPatientID BIGINT AUTO_INCREMENT NOT NULL, createdDate DATETIME, modifiedDate DATETIME, patientAge VARCHAR(10), patientBirthday DATE, patientID VARCHAR(100), patientName VARCHAR(100), patientSex VARCHAR(10), PRIMARY KEY (pkTBLPatientID))\r\nCREATE TABLE tbl_study (pkTBLStudyID BIGINT AUTO_INCREMENT NOT NULL, accessionNumber VARCHAR(30), additionalPatientHistory VARCHAR(300), admittingDiagnosesDescription VARCHAR(200), createdDate DATETIME, modifiedDate DATETIME, referringPhysicianName VARCHAR(100), studyDateTime DATETIME, studyDescription VARCHAR(300), studyID VARCHAR(50), studyInstanceUID VARCHAR(100), studyPriorityID VARCHAR(40), studyStatusID VARCHAR(40), pkTBLPatientID BIGINT, PRIMARY KEY (pkTBLStudyID))\r\nCREATE TABLE tbl_series (pkTBLSeriesID BIGINT AUTO_INCREMENT NOT NULL, bodyPartExamined VARCHAR(40), createdDate DATETIME, laterality VARCHAR(100), modifiedDate DATETIME, operatorsName VARCHAR(50), patientPosition VARCHAR(30), protocolName VARCHAR(100), seriesDateTime DATETIME, seriesDescription VARCHAR(100), seriesInstanceUID VARCHAR(100), seriesNumber INTEGER, pkTBLStudyID BIGINT, PRIMARY KEY (pkTBLSeriesID))\r\nCREATE TABLE tbl_equipment (pkTBLEquipmentID BIGINT AUTO_INCREMENT NOT NULL, conversionType VARCHAR(50), createdDate DATETIME, deviceSerialNumber VARCHAR(100), institutionAddress VARCHAR(150), institutionName VARCHAR(100), institutionalDepartmentName VARCHAR(50), manufacturer VARCHAR(100), manufacturerModelName VARCHAR(100), modality VARCHAR(50), modifiedDate DATETIME, softwareVersion VARCHAR(100), stationName VARCHAR(60), pkTBLSeriesID BIGINT, PRIMARY KEY (pkTBLEquipmentID))\r\nCREATE TABLE tbl_instance (pkTBLInstanceID BIGINT AUTO_INCREMENT NOT NULL, acquisitionDateTime DATETIME, contentDateTime DATETIME, createdDate DATETIME, exposureTime INTEGER, imageOrientation VARCHAR(40), imagePosition VARCHAR(80), imageType VARCHAR(40), instanceNumber INTEGER, kvp VARCHAR(40), mediaStorageSopInstanceUID VARCHAR(100), modifiedDate DATETIME, patientOrientation VARCHAR(40), pixelSpacing FLOAT, sliceLocation FLOAT, sliceThickness FLOAT, sopClassUID VARCHAR(100), sopInstanceUID VARCHAR(100), transferSyntaxUID VARCHAR(100), windowCenter VARCHAR(40), windowWidth VARCHAR(40), xrayTubeCurrent INTEGER, pkTBLSeriesID BIGINT, PRIMARY KEY (pkTBLInstanceID))\r\nALTER TABLE tbl_study ADD CONSTRAINT FK_tbl_study_pkTBLPatientID FOREIGN KEY (pkTBLPatientID) REFERENCES tbl_patient (pkTBLPatientID)\r\nALTER TABLE tbl_series ADD CONSTRAINT FK_tbl_series_pkTBLStudyID FOREIGN KEY (pkTBLStudyID) REFERENCES tbl_study (pkTBLStudyID)\r\nALTER TABLE tbl_equipment ADD CONSTRAINT FK_tbl_equipment_pkTBLSeriesID FOREIGN KEY (pkTBLSeriesID) REFERENCES tbl_series (pkTBLSeriesID)\r\nALTER TABLE tbl_instance ADD CONSTRAINT FK_tbl_instance_pkTBLSeriesID FOREIGN KEY (pkTBLSeriesID) REFERENCES tbl_series (pkTBLSeriesID)\r\n\r\n```\r\n\r\n### Dicom Entities\r\nThe well known dicom standard is known as  _**Patient --> NxStudy --> MxSeries --> ZxInstances**_ . Normally, all these data types are contained per dicom file. So, it is up to the vendor how the dicom data is processed. We created an additional entity next to the Series called _**'Equipment'**_ that shows the details of the modality being used by the dicom sender. The modality can be the CT, X-Ray or Ultrasound machine etc. Another important note is that _**Instance**_ can be either the image or SR document. Here, we only use images, so we keep the **instance** as **images** on the server level.\r\n\r\nRemember each dicom file keeps the hierarchy but is dependent on the vendor how to parse the file.\r\n\r\n```\r\nPatient --> NxStudy --> MxSeries --> ZxInstances \r\nSeries --> Equipment\r\n1 Patient can contain N of Studies, \r\n1 Study can contain M of Series\r\n1 Series can contain Z of Instances\r\n1 Series can contain 1 Equipment\r\n```\r\n\r\n### Entity Diagram\r\nThe relationship between the entities is illustrated as below:\r\n\r\n![Easy PACS Entity Diagram](https://2kere2beseder.files.wordpress.com/2015/04/easypacsorm_final.jpg)\r\n    \r\n### How to Setup Java Environment\r\nJava platform is tricky. It uses 32 bit Java environment along with needed _**clib_**_ files to enable the image file conversions. Please download and copy paste the below clib files under your jdk folder.\r\n\r\n1. Put 32 bit  [clib_jiio.dll, clib_jiio_sse2.dll, clib_jiio_util.dll](https://2kere2beseder.files.wordpress.com/2015/04/clib_files.zip) dll files under C:\\Program Files (x86)\\Java\\jdk1.8.0_45\\bin\r\n2. Put [clibwrapper_jiio.jar, jai_imageio.jar](https://2kere2beseder.files.wordpress.com/2015/04/clib_files.zip) jar files under  C:\\Program Files (x86)\\Java\\jdk1.8.0_45\\jre\\lib\\ext\\\r\n\r\n\r\n### Environmental Variables:\r\nMake sure that your Java Environmental Variables are setup correctly\r\n```\r\nUser Defined\r\nVariable Name:  JAVA_HOME\r\nVariable Value: C:\\Program Files (x86)\\Java\\jdk1.8.0_45\r\n```\r\n\r\n```\r\nSystem variables\r\nVariable Name:  CLASSPATH\r\nVariable Value: %JAVA_HOME%\\jre\\bin\r\n```\r\n\r\n### Let's Download & run our jar file!\r\nFirst download the folder template [EasyPACS.zip](https://s3-us-west-2.amazonaws.com/easypacs/EasyPACS.zip) file. It contains _**tmp**_ directory that stores the dicom and image files. It also contains 2 files; _**application.properties**_ and _**easy.pacs-0.0.1-SNAPSHOT.jar**_ files. Please replace the jar file with latest version[version](https://s3-us-west-2.amazonaws.com/easypacs/easy.pacs-0.0.1-SNAPSHOT.jar). \r\n\r\n\r\n### application.properties \r\nPlease follow the below instructions to modify your application.properties file. Update your MYSQL connection string **username**, **password** and **url** address. Please replace **localhost** with your **ip address** if needed.\r\n```\r\ndatasource.primary.url=jdbc:mysql://localhost:3306/dbdicom\r\ndatasource.primary.username=[username]\r\ndatasource.primary.password=[password]\r\n```\r\n\r\nChange PACS port number if needed (make sure port 104 is not being used) Your dicom PACS server will listen this port\r\n```\r\npacs.ports = 104\r\n```\r\n\r\nYou can also update your ae title. Here we put **'*'** that refers to any name of ae title\r\n```\r\npacs.aetitle = *\r\n```\r\n\r\nLikewise, you can change the dicom and image storage paths if needed\r\n```\r\npacs.storage.dcm = ./tmp/dcm\r\npacs.storage.image = ./tmp/img\r\n```\r\n\r\nYou can also update your web server's port. You will access your server from _**http://localhost:8085**_\r\n```\r\nserver.port=8085 \r\n```\r\n\r\n\r\n### Now, we are finished with our simple settings, we can run now from the command line!\r\n```\r\n# java -jar easy.pacs-0.0.1-SNAPSHOT.jar\r\n```\r\n\r\nTHAT IS IT!\r\n\r\n> Make sure that your database connection string is right, otherwise it will give hibernate error!\r\n\r\n* Go now to  _**http://localhost:8085**_  You will see such a screen:\r\n\r\n[![EasyPACS Home Page](https://2kere2beseder.files.wordpress.com/2015/04/homepage.jpg)] (https://2kere2beseder.files.wordpress.com/2015/04/homepage.jpg)\r\n\r\n\r\n### Let's send some dicom files to the server\r\nOur server is listening on port 104 with any name of AE Title on the localhost. We can now send dicom files to the server. \r\n\r\nPlease download the latest version of [dcm4che3](http://sourceforge.net/projects/dcm4che/files/dcm4che3/) toolkit. \r\nUnzip it in your disk and go to the bin directory. Use it as shown below:\r\n```\r\n# storescu -c WHATEVER@localhost:104 \"C:\\dcmsamples\\MARTIN^ZANE^\"\\*\r\n```\r\nIt means you send the dicom files of **MARTIN^ZANE^** to the AE Title _**WHATEVER**_ [it can be any name because we setup AE Title as star], to the port _**104**_ on _**localhost**_ (you can write your ip if you send remotely)\r\n\r\nBelow is the screenshot that shows how it is used on console\r\n\r\n[![storescu command](https://2kere2beseder.files.wordpress.com/2015/04/storescu.jpg)](https://2kere2beseder.files.wordpress.com/2015/04/storescu.jpg)\r\n\r\n\r\n> If you need sample dcm files, [here](https://s3-us-west-2.amazonaws.com/easypacs/MARTIN%5EZANE%5E.zip) you can download the test dcm files of [MARTIN^ZANE^](https://s3-us-west-2.amazonaws.com/easypacs/MARTIN%5EZANE%5E.zip). Don't worry about the HIPAA rules, it is just a test patient file.\r\n\r\nOur server receives the incoming dicom files and starts to create the entities. This is the server page that lists the received patients. In this page, you will see the monitor messages as well that indicates the incoming patient transfers. \r\n\r\nPatient MARTIN^ZANE^ has been received, the images will appended per dicom request\r\n\r\n[![Server Page](https://2kere2beseder.files.wordpress.com/2015/04/server.jpg)](https://2kere2beseder.files.wordpress.com/2015/04/server.jpg)\r\n\r\n\r\nAnd finally, this is the patient page that lists the latest study, series and images (instances). Remember that dicom files are saved on _**tmp\\dcm**_ and images are saved on _**tmp\\img**_. The images are populated in real time based on existence of dicom files. So, as long as the the dicom files are there, the images will be shown per page load that means deleting jpeg images won't effect the system.\r\n\r\n[![Patient](https://2kere2beseder.files.wordpress.com/2015/04/patient2.jpg)](https://2kere2beseder.files.wordpress.com/2015/04/patient2.jpg)\r\n\r\n\r\nYou can click the dicom thumbnail image and view in bigger mode \r\n\r\n[![view image](https://2kere2beseder.files.wordpress.com/2015/04/zoom.jpg)](https://2kere2beseder.files.wordpress.com/2015/04/zoom.jpg)","google":"UA-26578001-1","note":"Don't delete this file! It's used internally to help with page regeneration."}